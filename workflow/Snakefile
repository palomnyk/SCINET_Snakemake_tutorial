# Author: Aaron Yerke (aaronyerke@gmail.com)

configfile: "workflow/config/config.yaml"

import os
import pandas as pd
from snakemake.utils import min_version

##### set minimum snakemake version #####
min_version("8.9.0")

# Create constants
response_cols = ["mpg","good_milage","Respondent sequence number"]
# input function for rule aggregate, return paths to all files produced by the checkpoint
rule complete:
	input:
		"output/unit_test/tables/rf_test_scores.csv"

rule create_test_rf_dataset:
	conda:"env/snk_mk_conda_env.yml",
	output:
		"data/unit_test/mtc_predictor.csv",
		"data/unit_test/mtc_response.csv"
	shell:
		"""
		Rscript workflow/scripts/data_org/make_rf_test_dfs.R
		"""

rule aggregate_rf_tables_test_data:
	conda:"env/snk_mk_conda_env.yml"
	input:expand("output/unit_test/tables/1col{respns_column}?rf_test_scores.csv", respns_column=response_cols)
	output: "output/unit_test/tables/rf_test_scores.csv"
	shell:
		"""
		echo "{input}"
		Rscript workflow/scripts/data_org/combine_rf_data.R --out_subdir unit_test --fn_root rf_test
		"""

rule rf_test_dataset:
	conda:"env/snk_mk_conda_env.yml"
	input:
		pred = "data/unit_test/mtc_predictor.csv",
		resp = "data/unit_test/mtc_response.csv"
	output:
		"output/unit_test/tables/1col{respns_column}?rf_test_scores.csv"
	shell:
		"""
		python workflow/scripts/ml/random_forest.py \
				--response_fn {input.resp} \
				--delimeter , \
				--pred_path {input.pred} \
				--out_folder unit_test \
				--output_label rf_test \
				--title rf_test \
				--response_col {wildcards.respns_column:q}
		"""
